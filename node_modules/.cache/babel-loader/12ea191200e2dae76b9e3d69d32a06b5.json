{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Website 2.0\\\\src\\\\Box.jsx\";\nimport React from \"react\";\nimport $ from \"jquery\";\nimport infoBoxImage from \"./assets/infoIcon.svg\";\nimport infoIconCloseImage from \"./assets/infoIconClose.png\";\nimport infoIconMeltAnimationSpriteSheet from \"./assets/infoIconMeltAnimation.png\";\nimport \"./styles/box.css\";\nimport { TweenLite, TimelineMax, SteppedEase, TweenMax, TimelineLite, Expo } from \"gsap\";\nimport BoxContentCamera from \"./BoxContentCamera\";\nexport default class Box extends React.Component {\n  constructor(props) {\n    super(props);\n    this.infoBox = null;\n    this.alertBox = null;\n    this.infoIcon = null;\n    this.content = null;\n    this.noticationAnimationDuration = 1; // In seconds\n\n    this.state = {\n      isInfoHidden: true,\n      iconStatus: \"Running\",\n      notificationList: [],\n      openInfoBox: new TimelineMax({\n        paused: true\n      }),\n      iconMelt: new TimelineLite({\n        paused: true\n      }),\n      newNotificationPulse: new TimelineLite({\n        paused: true\n      })\n    };\n    this.toggleInfo = this.toggleInfo.bind(this);\n    this.showInfo = this.showInfo.bind(this);\n    this.closeInfo = this.closeInfo.bind(this);\n    this.showNotification = this.showNotification.bind(this);\n    this.renderInfoIcon = this.renderInfoIcon.bind(this);\n  }\n\n  componentDidMount() {\n    var self = this;\n    TweenLite.set(this.infoBox, {\n      scaleY: 0,\n      transformOrigin: \"50% 0%\"\n    });\n    this.state.openInfoBox.to(this.infoBox, 0.5, {\n      scaleY: 1,\n      height: \"100px\",\n      transformOrigin: \"50% 0%\",\n      onComplete: function () {\n        self.setState(state => ({\n          iconStatus: \"Open\"\n        }));\n      },\n      onReverseComplete: function () {\n        self.setState(state => ({\n          iconStatus: \"Closed\"\n        }));\n      } // ease: Expo.easeOut\n\n    });\n    this.state.openInfoBox.progress(1).progress(0); // this.state.iconMelt.to(this.infoIcon, 0.5, {\n    // \tbackgroundPosition: \"-1300px\",\n    // \tease: SteppedEase.config(13),\n    // \tonReverseComplete: function() {\n    // \t\tself.setState(state => ({\n    // \t\t\ticonStatus: \"Closed\"\n    // \t\t}));\n    // \t}\n    // });\n\n    this.state.iconMelt.progress(1).progress(0);\n    this.state.newNotificationPulse.from(this.alertBox, this.noticationAnimationDuration, {\n      scaleX: 1,\n      width: \"0px\",\n      color: \"black\",\n      transformOrigin: \"0 50%\",\n      ease: Expo.easeInOut\n    });\n    this.state.newNotificationPulse.progress(1).progress(0);\n  }\n\n  toggleInfo(e) {\n    e.preventDefault();\n    this.setState(this.state);\n    this.state.isInfoHidden ? this.showInfo() : this.closeInfo();\n  }\n\n  showInfo() {\n    this.setState(state => ({\n      isInfoHidden: false,\n      iconStatus: \"Running\"\n    }));\n    this.state.openInfoBox.play();\n  }\n\n  closeInfo() {\n    this.setState(state => ({\n      isInfoHidden: true,\n      iconStatus: \"Running\"\n    })); // Play the reverse animation faster for impatient users\n\n    this.state.openInfoBox.reverse().timeScale(2);\n    var self = this; // TweenMax.delayedCall(0.25, function() {\n    // \tself.state.iconMelt.reverse();\n    // });\n  }\n\n  showNotification(notificationText) {\n    var newList = this.state.notificationList;\n    newList.push(notificationText);\n    this.setState(state => ({\n      notificationList: newList\n    }));\n    this.state.newNotificationPulse.play();\n  }\n\n  closeNotification(notificationIndex) {\n    var self = this;\n    setTimeout(function () {\n      var newList = self.state.notificationList;\n      newList.splice(notificationIndex, 1);\n      self.setState(state => ({\n        notificationList: newList\n      }));\n    }, 1000 * self.noticationAnimationDuration);\n    this.state.newNotificationPulse.reverse();\n  }\n\n  renderInfoIcon() {\n    var spriteSheetStyle = {\n      background: \"url(\" + infoIconMeltAnimationSpriteSheet + \")\"\n    };\n\n    switch (this.state.iconStatus) {\n      case \"Closed\":\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: infoBoxImage,\n          className: \"infoIcon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          hidden: true,\n          style: null,\n          className: \"infoIcon\",\n          ref: div => this.infoIcon = div,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }));\n\n      case \"Running\": // return (\n      // \t<div\n      // \t\tstyle={spriteSheetStyle}\n      // \t\tclassName=\"infoIcon\"\n      // \t\tref={div => (this.infoIcon = div)}\n      // \t/>\n      // );\n\n      case \"Open\":\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: infoIconCloseImage,\n          className: \"infoIcon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          hidden: true,\n          style: null,\n          className: \"infoIcon\",\n          ref: div => this.infoIcon = div,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }));\n\n      default:\n        return React.createElement(\"p\", {\n          className: \"infoIcon\",\n          ref: div => this.infoIcon = div,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"Error\");\n    }\n  }\n\n  render() {\n    var notificationList = Array.from(this.state.notificationList);\n    return React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"boxTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"boxTitleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.props.boxTitle)), React.createElement(\"div\", {\n      className: \"boxTitleInfo\",\n      onClick: this.toggleInfo,\n      title: \"More on \" + this.props.boxTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.renderInfoIcon())), React.createElement(\"div\", {\n      className: \"boxInfoContent\",\n      ref: div => this.infoBox = div,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.props.boxInfoContent), React.createElement(\"div\", {\n      className: \"boxContentWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"boxContent\",\n      ref: div => this.content = div,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(BoxContentCamera, {\n      boxItem: this.props.boxContent,\n      showNotification: this.showNotification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"boxAlertWrapper\",\n      ref: div => this.alertBox = div,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, notificationList.map((item, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"boxAlertContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"notificationText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, item), React.createElement(\"img\", {\n      src: infoIconCloseImage,\n      fill: \"#000000\",\n      className: \"notificationCloseIcon\",\n      onClick: () => this.closeNotification(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\Website 2.0\\src\\Box.jsx"],"names":["React","$","infoIconCloseImage","infoIconMeltAnimationSpriteSheet","TweenLite","TimelineMax","SteppedEase","TweenMax","TimelineLite","Expo","BoxContentCamera","Box","Component","constructor","props","infoBox","alertBox","infoIcon","content","noticationAnimationDuration","state","isInfoHidden","iconStatus","notificationList","openInfoBox","paused","iconMelt","newNotificationPulse","toggleInfo","bind","showInfo","closeInfo","showNotification","renderInfoIcon","componentDidMount","self","set","scaleY","transformOrigin","to","height","onComplete","setState","onReverseComplete","progress","from","scaleX","width","color","ease","easeInOut","e","preventDefault","play","reverse","timeScale","notificationText","newList","push","closeNotification","notificationIndex","setTimeout","splice","spriteSheetStyle","background","infoBoxImage","div","render","Array","boxTitle","boxInfoContent","boxContent","map","item","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport $ from \"jquery\";\r\nimport infoBoxImage from \"./assets/infoIcon.svg\";\r\nimport infoIconCloseImage from \"./assets/infoIconClose.png\";\r\nimport infoIconMeltAnimationSpriteSheet from \"./assets/infoIconMeltAnimation.png\";\r\nimport \"./styles/box.css\";\r\nimport {\r\n\tTweenLite,\r\n\tTimelineMax,\r\n\tSteppedEase,\r\n\tTweenMax,\r\n\tTimelineLite,\r\n\tExpo\r\n} from \"gsap\";\r\nimport BoxContentCamera from \"./BoxContentCamera\";\r\n\r\nexport default class Box extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.infoBox = null;\r\n\t\tthis.alertBox = null;\r\n\t\tthis.infoIcon = null;\r\n\t\tthis.content = null;\r\n\t\tthis.noticationAnimationDuration = 1; // In seconds\r\n\t\tthis.state = {\r\n\t\t\tisInfoHidden: true,\r\n\t\t\ticonStatus: \"Running\",\r\n\t\t\tnotificationList: [],\r\n\t\t\topenInfoBox: new TimelineMax({\r\n\t\t\t\tpaused: true\r\n\t\t\t}),\r\n\t\t\ticonMelt: new TimelineLite({\r\n\t\t\t\tpaused: true\r\n\t\t\t}),\r\n\t\t\tnewNotificationPulse: new TimelineLite({\r\n\t\t\t\tpaused: true\r\n\t\t\t})\r\n\t\t};\r\n\t\tthis.toggleInfo = this.toggleInfo.bind(this);\r\n\t\tthis.showInfo = this.showInfo.bind(this);\r\n\t\tthis.closeInfo = this.closeInfo.bind(this);\r\n\t\tthis.showNotification = this.showNotification.bind(this);\r\n\t\tthis.renderInfoIcon = this.renderInfoIcon.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tvar self = this;\r\n\t\tTweenLite.set(this.infoBox, { scaleY: 0, transformOrigin: \"50% 0%\" });\r\n\t\tthis.state.openInfoBox.to(this.infoBox, 0.5, {\r\n\t\t\tscaleY: 1,\r\n\t\t\theight: \"100px\",\r\n\t\t\ttransformOrigin: \"50% 0%\",\r\n\t\t\tonComplete: function() {\r\n\t\t\t\tself.setState(state => ({\r\n\t\t\t\t\ticonStatus: \"Open\"\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\tonReverseComplete: function() {\r\n\t\t\t\tself.setState(state => ({\r\n\t\t\t\t\ticonStatus: \"Closed\"\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t// ease: Expo.easeOut\r\n\t\t});\r\n\t\tthis.state.openInfoBox.progress(1).progress(0);\r\n\r\n\t\t// this.state.iconMelt.to(this.infoIcon, 0.5, {\r\n\t\t// \tbackgroundPosition: \"-1300px\",\r\n\t\t// \tease: SteppedEase.config(13),\r\n\t\t// \tonReverseComplete: function() {\r\n\t\t// \t\tself.setState(state => ({\r\n\t\t// \t\t\ticonStatus: \"Closed\"\r\n\t\t// \t\t}));\r\n\t\t// \t}\r\n\t\t// });\r\n\t\tthis.state.iconMelt.progress(1).progress(0);\r\n\t\tthis.state.newNotificationPulse.from(\r\n\t\t\tthis.alertBox,\r\n\t\t\tthis.noticationAnimationDuration,\r\n\t\t\t{\r\n\t\t\t\tscaleX: 1,\r\n\t\t\t\twidth: \"0px\",\r\n\t\t\t\tcolor: \"black\",\r\n\t\t\t\ttransformOrigin: \"0 50%\",\r\n\t\t\t\tease: Expo.easeInOut\r\n\t\t\t}\r\n\t\t);\r\n\t\tthis.state.newNotificationPulse.progress(1).progress(0);\r\n\t}\r\n\ttoggleInfo(e) {\r\n\t\te.preventDefault();\r\n\t\tthis.setState(this.state);\r\n\t\tthis.state.isInfoHidden ? this.showInfo() : this.closeInfo();\r\n\t}\r\n\tshowInfo() {\r\n\t\tthis.setState(state => ({\r\n\t\t\tisInfoHidden: false,\r\n\t\t\ticonStatus: \"Running\"\r\n\t\t}));\r\n\r\n\t\tthis.state.openInfoBox.play();\r\n\t}\r\n\tcloseInfo() {\r\n\t\tthis.setState(state => ({\r\n\t\t\tisInfoHidden: true,\r\n\t\t\ticonStatus: \"Running\"\r\n\t\t}));\r\n\t\t// Play the reverse animation faster for impatient users\r\n\t\tthis.state.openInfoBox.reverse().timeScale(2);\r\n\t\tvar self = this;\r\n\t\t// TweenMax.delayedCall(0.25, function() {\r\n\t\t// \tself.state.iconMelt.reverse();\r\n\t\t// });\r\n\t}\r\n\tshowNotification(notificationText) {\r\n\t\tvar newList = this.state.notificationList;\r\n\t\tnewList.push(notificationText);\r\n\t\tthis.setState(state => ({\r\n\t\t\tnotificationList: newList\r\n\t\t}));\r\n\t\tthis.state.newNotificationPulse.play();\r\n\t}\r\n\tcloseNotification(notificationIndex) {\r\n\t\tvar self = this;\r\n\t\tsetTimeout(function() {\r\n\t\t\tvar newList = self.state.notificationList;\r\n\t\t\tnewList.splice(notificationIndex, 1);\r\n\t\t\tself.setState(state => ({\r\n\t\t\t\tnotificationList: newList\r\n\t\t\t}));\r\n\t\t}, 1000 * self.noticationAnimationDuration);\r\n\t\tthis.state.newNotificationPulse.reverse();\r\n\t}\r\n\trenderInfoIcon() {\r\n\t\tvar spriteSheetStyle = {\r\n\t\t\tbackground: \"url(\" + infoIconMeltAnimationSpriteSheet + \")\"\r\n\t\t};\r\n\t\tswitch (this.state.iconStatus) {\r\n\t\t\tcase \"Closed\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={infoBoxImage} className=\"infoIcon\" />\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\tstyle={null}\r\n\t\t\t\t\t\t\tclassName=\"infoIcon\"\r\n\t\t\t\t\t\t\tref={div => (this.infoIcon = div)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\tcase \"Running\":\r\n\t\t\t// return (\r\n\t\t\t// \t<div\r\n\t\t\t// \t\tstyle={spriteSheetStyle}\r\n\t\t\t// \t\tclassName=\"infoIcon\"\r\n\t\t\t// \t\tref={div => (this.infoIcon = div)}\r\n\t\t\t// \t/>\r\n\t\t\t// );\r\n\t\t\tcase \"Open\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={infoIconCloseImage} className=\"infoIcon\" />\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\thidden\r\n\t\t\t\t\t\t\tstyle={null}\r\n\t\t\t\t\t\t\tclassName=\"infoIcon\"\r\n\t\t\t\t\t\t\tref={div => (this.infoIcon = div)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<p className=\"infoIcon\" ref={div => (this.infoIcon = div)}>\r\n\t\t\t\t\t\tError\r\n\t\t\t\t\t</p>\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tvar notificationList = Array.from(this.state.notificationList);\r\n\t\treturn (\r\n\t\t\t<div className=\"box\">\r\n\t\t\t\t<div className=\"boxTitle\">\r\n\t\t\t\t\t<div className=\"boxTitleText\">\r\n\t\t\t\t\t\t<h3>{this.props.boxTitle}</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"boxTitleInfo\"\r\n\t\t\t\t\t\tonClick={this.toggleInfo}\r\n\t\t\t\t\t\ttitle={\"More on \" + this.props.boxTitle}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.renderInfoIcon()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"boxInfoContent\"\r\n\t\t\t\t\tref={div => (this.infoBox = div)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.boxInfoContent}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"boxContentWrapper\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"boxContent\"\r\n\t\t\t\t\t\tref={div => (this.content = div)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BoxContentCamera\r\n\t\t\t\t\t\t\tboxItem={this.props.boxContent}\r\n\t\t\t\t\t\t\tshowNotification={this.showNotification}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"boxAlertWrapper\"\r\n\t\t\t\t\tref={div => (this.alertBox = div)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{notificationList.map((item, index) => (\r\n\t\t\t\t\t\t<div key={index} className=\"boxAlertContent\">\r\n\t\t\t\t\t\t\t<div className=\"notificationText\">{item}</div>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={infoIconCloseImage}\r\n\t\t\t\t\t\t\t\tfill=\"#000000\"\r\n\t\t\t\t\t\t\t\tclassName=\"notificationCloseIcon\"\r\n\t\t\t\t\t\t\t\tonClick={() => this.closeNotification(index)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}